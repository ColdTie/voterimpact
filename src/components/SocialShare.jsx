import React, { useState } from 'react';

const SocialShare = ({ legislation, analysis, userProfile, onClose }) => {
  const [shareFormat, setShareFormat] = useState('summary');

  const formatFinancialEffect = (amount) => {
    if (amount === 0) return '$0';
    const absAmount = Math.abs(amount);
    const sign = amount >= 0 ? '+' : '-';
    return `${sign}$${absAmount.toLocaleString()}`;
  };

  const generateShareContent = (format) => {
    const baseUrl = window.location.origin;
    const impactEmoji = analysis?.isBenefit ? '👍' : '👎';
    const confidenceEmoji = analysis?.confidence > 75 ? '🔥' : analysis?.confidence > 50 ? '👍' : '🤔';
    
    switch (format) {
      case 'summary':
        return {
          title: `📊 ${legislation.title}`,
          text: `${impactEmoji} Personal Impact: ${formatFinancialEffect(analysis?.financialEffect || 0)} over ${analysis?.timeline || 'TBD'}\n\n${confidenceEmoji} Confidence: ${analysis?.confidence || 0}%\n\nAnalyzed with VoterImpact 🗳️`,
          url: baseUrl
        };
      
      case 'detailed':
        return {
          title: `📋 Legislative Analysis: ${legislation.title}`,
          text: `🏛️ Status: ${legislation.status}
📍 Scope: ${legislation.scope}
${legislation.location ? `📌 Location: ${legislation.location}` : ''}

${impactEmoji} Personal Impact Analysis:
${analysis?.personalImpact || legislation.personalImpact}

💰 Financial Effect: ${formatFinancialEffect(analysis?.financialEffect || legislation.financialEffect)}
⏰ Timeline: ${analysis?.timeline || legislation.timeline}
${confidenceEmoji} Confidence: ${analysis?.confidence || legislation.confidence}%

Generated by VoterImpact 🗳️ - Personalized Legislative Analysis
${baseUrl}`,
          url: baseUrl
        };
      
      case 'call-to-action':
        return {
          title: `🗳️ Take Action: ${legislation.title}`,
          text: `This ${legislation.scope.toLowerCase()} legislation could ${analysis?.isBenefit ? 'benefit' : 'cost'} you ${formatFinancialEffect(Math.abs(analysis?.financialEffect || legislation.financialEffect))}!

${analysis?.personalImpact || legislation.personalImpact}

Status: ${legislation.status}
Your voice matters! Contact your representatives.

Learn more with VoterImpact 🗳️
${baseUrl}`,
          url: baseUrl
        };
      
      default:
        return { title: legislation.title, text: '', url: baseUrl };
    }
  };

  const shareContent = generateShareContent(shareFormat);

  const handleNativeShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share(shareContent);
      } catch (error) {
        console.log('Share cancelled');
      }
    } else {
      navigator.clipboard.writeText(`${shareContent.title}\n\n${shareContent.text}\n\n${shareContent.url}`);
      alert('Content copied to clipboard!');
    }
  };

  const shareToTwitter = () => {
    const text = encodeURIComponent(`${shareContent.title}\n\n${shareContent.text}`);
    const url = encodeURIComponent(shareContent.url);
    window.open(`https://twitter.com/intent/tweet?text=${text}&url=${url}`, '_blank');
  };

  const shareToFacebook = () => {
    const url = encodeURIComponent(shareContent.url);
    const quote = encodeURIComponent(`${shareContent.title}\n\n${shareContent.text}`);
    window.open(`https://www.facebook.com/sharer/sharer.php?u=${url}&quote=${quote}`, '_blank');
  };

  const shareToLinkedIn = () => {
    const url = encodeURIComponent(shareContent.url);
    const title = encodeURIComponent(shareContent.title);
    const summary = encodeURIComponent(shareContent.text);
    window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${url}&title=${title}&summary=${summary}`, '_blank');
  };

  const shareToReddit = () => {
    const url = encodeURIComponent(shareContent.url);
    const title = encodeURIComponent(`${shareContent.title} - ${shareContent.text.substring(0, 100)}...`);
    window.open(`https://reddit.com/submit?url=${url}&title=${title}`, '_blank');
  };

  const copyToClipboard = () => {
    const fullText = `${shareContent.title}\n\n${shareContent.text}\n\n${shareContent.url}`;
    navigator.clipboard.writeText(fullText);
    alert('Content copied to clipboard!');
  };

  const downloadAsText = () => {
    const content = `${shareContent.title}\n\n${shareContent.text}\n\nGenerated by VoterImpact on ${new Date().toLocaleDateString()}\n${shareContent.url}`;
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${legislation.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_analysis.txt`;
    link.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-hidden">
        <div className="flex justify-between items-center p-4 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-900">Share Analysis</h2>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600 text-2xl font-bold"
          >
            ×
          </button>
        </div>

        <div className="p-4">
          {/* Format Selection */}
          <div className="mb-4">
            <h3 className="text-sm font-medium text-gray-700 mb-2">Share Format</h3>
            <div className="grid grid-cols-3 gap-2">
              <button
                onClick={() => setShareFormat('summary')}
                className={`p-2 text-sm rounded-lg border ${
                  shareFormat === 'summary' 
                    ? 'bg-blue-50 border-blue-300 text-blue-800' 
                    : 'bg-gray-50 border-gray-300 text-gray-700'
                }`}
              >
                📊 Summary
              </button>
              <button
                onClick={() => setShareFormat('detailed')}
                className={`p-2 text-sm rounded-lg border ${
                  shareFormat === 'detailed' 
                    ? 'bg-blue-50 border-blue-300 text-blue-800' 
                    : 'bg-gray-50 border-gray-300 text-gray-700'
                }`}
              >
                📋 Detailed
              </button>
              <button
                onClick={() => setShareFormat('call-to-action')}
                className={`p-2 text-sm rounded-lg border ${
                  shareFormat === 'call-to-action' 
                    ? 'bg-blue-50 border-blue-300 text-blue-800' 
                    : 'bg-gray-50 border-gray-300 text-gray-700'
                }`}
              >
                🗳️ Call to Action
              </button>
            </div>
          </div>

          {/* Preview */}
          <div className="mb-4">
            <h3 className="text-sm font-medium text-gray-700 mb-2">Preview</h3>
            <div className="bg-gray-50 p-3 rounded-lg border max-h-48 overflow-y-auto">
              <div className="font-medium text-gray-900 mb-2">{shareContent.title}</div>
              <div className="text-sm text-gray-700 whitespace-pre-line">{shareContent.text}</div>
              {shareContent.url && (
                <div className="text-xs text-blue-600 mt-2">{shareContent.url}</div>
              )}
            </div>
          </div>

          {/* Share Options */}
          <div className="grid grid-cols-2 gap-3">
            {/* Native Share */}
            <button
              onClick={handleNativeShare}
              className="flex items-center justify-center space-x-2 p-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
            >
              <span>📱</span>
              <span>Share</span>
            </button>

            {/* Copy to Clipboard */}
            <button
              onClick={copyToClipboard}
              className="flex items-center justify-center space-x-2 p-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700"
            >
              <span>📋</span>
              <span>Copy</span>
            </button>

            {/* Social Media Options */}
            <button
              onClick={shareToTwitter}
              className="flex items-center justify-center space-x-2 p-3 bg-blue-400 text-white rounded-lg hover:bg-blue-500"
            >
              <span>🐦</span>
              <span>Twitter</span>
            </button>

            <button
              onClick={shareToFacebook}
              className="flex items-center justify-center space-x-2 p-3 bg-blue-800 text-white rounded-lg hover:bg-blue-900"
            >
              <span>📘</span>
              <span>Facebook</span>
            </button>

            <button
              onClick={shareToLinkedIn}
              className="flex items-center justify-center space-x-2 p-3 bg-blue-700 text-white rounded-lg hover:bg-blue-800"
            >
              <span>💼</span>
              <span>LinkedIn</span>
            </button>

            <button
              onClick={shareToReddit}
              className="flex items-center justify-center space-x-2 p-3 bg-orange-600 text-white rounded-lg hover:bg-orange-700"
            >
              <span>🤖</span>
              <span>Reddit</span>
            </button>
          </div>

          {/* Additional Options */}
          <div className="mt-4 pt-4 border-t border-gray-200">
            <button
              onClick={downloadAsText}
              className="w-full flex items-center justify-center space-x-2 p-2 text-sm text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50"
            >
              <span>💾</span>
              <span>Download as Text File</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SocialShare;